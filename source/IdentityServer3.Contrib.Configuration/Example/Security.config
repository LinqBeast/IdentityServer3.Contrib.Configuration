<?xml version="1.0" encoding="utf-8" ?>
<security>
	<application>
		<authorization timeout="5000" />
		<claimsCollection applications="SomeApplication" connectionKey="Company.Shared.Security.ConnectionString.{0}" isCacheEnabled="true" cacheType="Redis" expiry="00:30:00" />
	</application>
	<aspNetIdentity isLoadKnownDefaults="true">
		<password requiredLength="10" matchPattern="^(?=.*[0-9])(?=.*[!@#$%^&amp;*])[0-9a-zA-Z!@#$%^&amp;*0-9]{10,}$" matchPatternMessage="Password should have one numeral and one special character" historyLimit="5" expiryDays="90" />
		<userManager isUserLockoutEnabledByDefault="true" defaultAccountLockoutTimeSpan="00:10:00" maxFailedAccessAttemptsBeforeLockout="3" tokenProviderTokenExpiration="1.00:00:00">
			<supportedFields isSupportsQueryableUsers="true" isSupportsUserClaim="true" isSupportsUserEmail="true" isSupportsUserLockout="true" isSupportsUserLogin="true" isSupportsUserPassword="true" isSupportsUserPhoneNumber="true" isSupportsUserRole="false" isSupportsUserSecurityStamp="true" isSupportsUserTwoFactor="false" />
		</userManager>
	</aspNetIdentity>
	<identityManager isLoadKnownDefaults="true" isEnabled="true" isDisableUserInterface="false">
		<security type="Host" additionalSignOutType="|~|" adminRoleName="IdentityManager" bearerAuthenticationType="bearer" hostAuthenticationType="Cookies" nameClaimType="name" requireSsl="true" roleClaimType="role" showLoginButton="true" tokenExpiration="10:00:00" />
	</identityManager>
	<identityServer isLoadKnownDefaults="true">
		<client idTokenHint="id_token" tenant="SomeApplication" uniqueClaimTypeIdentifier="sub">
			<cookieAuthenticationOptions authenticationMode="Active" authenticationType="Cookies" cookieDomain="|~|" cookieHttpOnly="true" cookieName="|~|" cookiePath="/" cookieSecure="SameAsRequest" expireTimeSpan="14.00:00:00" loginPath="|~|" logoutPath="|~|" returnUrlParameter="|~|" slidingExpiration="true">
				<description authenticationType="|~|" caption="|~|" />
			</cookieAuthenticationOptions>
			<openIdConnectAuthenticationOptions authenticationMode="Active"
                                          authenticationType="OpenIdConnect"
                                          authority="https://localhost:44300/core"
                                          backChannelHttpHandler="00:01:00"
                                          callBackPath="|~|"
                                          caption="OpenIdConnect"
                                          clientId="someapplication"
                                          clientSecret="1q2w3e4r5t"
                                          metaDataAddress="|~|"
                                          postLogoutRedirectUri="https://localhost:44301/"
                                          redirectUri="https://localhost:44301/"
                                          resource="|~|"
                                          responseType="code id_token token"
                                          refreshOnIssuerKeyNotFound="true"
                                          signInAsAuthenticationType="Cookies"
                                          scope="openid profile email roles offline_access userstore"
                                          useTokenLifeTime="true">
				<configuration authorizationEndpoint="|~|" checkSessionIframe="|~|" endSessionEndpoint="|~|" issuer="|~|" jwksUri="|~|" tokenEndpoint="|~|" userInfoEndpoint="|~|">
					<jsonWebKeys>
						<jsonWebKey id="|~|" value="|~|" />
					</jsonWebKeys>
				</configuration>
				<description authenticationType="OpenIdConnect" caption="OpenIdConnect">
					<properties>
						<property id="AuthenticationType" value="OpenIdConnect" />
						<property id="Caption" value="OpenIdConnect" />
					</properties>
				</description>
				<protocolValidator nonceLifetime="01:00:00" requireAcr="false" requireAmr="false" requireAuthTime="false" requireAzp="false" requireNonce="true" requireSub="false" requireTimeStampInNonce="true" />
			</openIdConnectAuthenticationOptions>
			<identityServerBearerTokenAuthenticationOptions authenticationMode="Active" authenticationType="Bearer" authority="|~|" clientId="|~|" clientSecret="|~|" delayLoadMetadata="false" enableValidationResultCache="false" issuerName="|~|" nameClaimType="name" preserveAccessToken="false" requiredScopes="|~|" roleClaimType="role" validationMode="Both" validationResultCacheDuration="00:05:00">
				<description authenticationType="|~|" caption="|~|" />
			</identityServerBearerTokenAuthenticationOptions>
			<clientCredentialOptions clientId="|~|" secret="|~|" scope="|~|" />
		</client>
		<server basePath="https://localhost:44300" path="/core" adminPath="/admin" domain="Domain">
			<clients isUseInMemoryStore="true">
				<client absoluteRefreshTokenLifetime="2592000"
                accessTokenLifetime="3600"
                accessTokenType="Jwt"
                allowAccessToAllCustomGrantTypes="false"
                allowAccessToAllScopes="false"
                allowClientCredentialsOnly="false"
                allowedCorsOrigins="http://localhost:80/,http://localhost:8080/"
                allowedCustomGrantTypes="CustomGrant1,CustomGrant2"
                allowedScopes="openid,profile,email,roles,offline_access"
                allowRememberConsent="true"
                alwaysSendClientClaims="false"
                authorizationCodeLifetime="300"
                clientId="Client1"
                clientName="Client One"
                clientUri="http://localhost"
                enabled="true"
                enableLocalLogin="true"
                flow="Hybrid"
                identityProviderRestrictions="microsoft.com,google.com"
                identityTokenLifetime="300"
                includeJwtId="false"
                logoUri="http://localhost/1.bmp"
                logoutSessionRequired="true"
                logoutUri="http://localhost/logout"
                postLogoutRedirectUris="https://localhost:44301/,https://localhost:44302/"
                prefixClientClaims="true"
                redirectUris="https://localhost:44301/,https://localhost:44302/"
                refreshTokenExpiration="Absolute"
                refreshTokenUsage="OneTimeOnly"
                requireConsent="true"
                slidingRefreshTokenLifetime="1296000"
                updateAccessTokenClaimsOnRefresh="false">
					<claims>
						<claim value="claimValue" type="claimType" valueType="http://www.w3.org/2001/XMLSchema#string" issuer="LOCAL AUTHORITY" originalIssuer="http://localhost">
							<subject />
						</claim>
						<claim value="claimValue2" type="claimType" valueType="http://www.w3.org/2001/XMLSchema#string" issuer="LOCAL AUTHORITY" originalIssuer="http://localhost">
							<subject />
						</claim>
					</claims>
					<secrets>
						<secret value="value" type="SharedSecret" description="description" expiration="01/01/2000 12:00:00 AM" />
						<secret value="value2" type="SharedSecret" description="description" expiration="01/01/2000 12:00:00 AM" />
					</secrets>
				</client>
				<client absoluteRefreshTokenLifetime="2592000"
                accessTokenLifetime="3600"
                accessTokenType="Jwt"
                allowAccessToAllCustomGrantTypes="false"
                allowAccessToAllScopes="false"
                allowClientCredentialsOnly="false"
                allowedCorsOrigins="http://localhost:80/, http://localhost:8080/"
                allowedCustomGrantTypes="CustomGrant1,CustomGrant2"
                allowedScopes="openid,profile,email,roles,offline_access"
                allowRememberConsent="true"
                alwaysSendClientClaims="false"
                authorizationCodeLifetime="300"
                clientId="Client2"
                clientName="Client Two"
                clientUri="http://localhost"
                enabled="true"
                enableLocalLogin="true"
                flow="Hybrid"
                identityProviderRestrictions=""
                identityTokenLifetime="300"
                includeJwtId="false"
                logoUri="http://localhost/1.bmp"
                logoutSessionRequired="true"
                logoutUri="http://localhost/logout"
                postLogoutRedirectUris="https://localhost:44301/"
                prefixClientClaims="true"
                redirectUris="https://localhost:44301/"
                refreshTokenExpiration="Absolute"
                refreshTokenUsage="OneTimeOnly"
                requireConsent="true"
                slidingRefreshTokenLifetime="1296000"
                updateAccessTokenClaimsOnRefresh="false">
					<claims>
						<claim value="claimValue" type="claimType" valueType="http://www.w3.org/2001/XMLSchema#string" issuer="LOCAL AUTHORITY" originalIssuer="http://localhost">
							<subject />
						</claim>
					</claims>
					<secrets>
						<secret value="value" type="SharedSecret" description="description" expiration="01/01/2000 12:00:00 AM" />
					</secrets>
				</client>
			</clients>
			<users isUseInMemoryStore="false" isIncludeDomainRoles="false" connectionKey="Company.Shared.Security.ConnectionString" />
			<scopes isUseInMemoryStore="true">
				<scope name="OpenId" />
				<scope name="Roles" />
				<scope name="Profile" />
				<scope name="Email" />
				<scope name="OfflineAccess" />
				<scope claimsRule="claimsRule" description="description" displayName="displayName" emphasize="false" enabled="true" includeAllClaimsForUser="false" name="name" required="false" showInDiscoveryDocument="true" type="Identity">
					<claims>
						<claim alwaysIncludeInIdToken="false" description="description" name="name" />
						<claim alwaysIncludeInIdToken="false" description="description" name="name2" />
					</claims>
					<secrets>
						<secret value="value" type="type" description="description" expiration="01/01/2000 12:00:00 AM" />
						<secret value="value2" type="type" description="description" expiration="01/01/2000 12:00:00 AM" />
					</secrets>
				</scope>
			</scopes>
			<options enableWelcomePage="true" issuerUri="http://localhost:44300" protocolLogoutUrls="http://localhost:44300,http://localhost:44301" publicOrigin="https://localhost:44300" requireSsl="true" siteName="Company Authentication Server">
				<authentication enableLocalLogin="true" enableLoginHint="true" enablePostSignOutAutoRedirect="false" enableSignOutPrompt="true" invalidSignInRedirectUrl="http://localhost:44300" postSignOutAutoRedirectDelay="0" rememberLastUsername="false" requireAuthenticatedUserForSignOutMessage="false" signInMessageThreshold="5" isEnableExternalWindowsAuthentication="true" externalWindowsAuthenticationCaption="Windows" resetPasswordRedirectUri="/account/ResetPasswordRedirect?subject={0}&amp;username={1}&amp;redirectUrl={2}" resetPasswordUri="/account/ResetPassword?subject={0}&amp;token={1}&amp;redirectUrl={2}">
					<cookie allowRememberMe="true" expireTimeSpan="10:00:00" isPersistent="false" path="/some/path" prefix="dcis" rememberMeDuration="30" secureMode="SameAsRequest" slidingExpiration="false" />
					<loginPageLinks>
						<link href="http://localhost" text="localhost" type="local" />
						<link href="http://google.com" text="google" type="search" />
					</loginPageLinks>
				</authentication>
				<caching isEnabledClients="false" isEnabledScopes="false" isEnabledUsers="true" isUseInMemoryStore="false" customType="Redis" clientExpiry="02:00:00" scopeExpiry="02:00:00" userExpiry="00:30:00" usersExpiry="24:00:00" />
				<certificate name="|~|" storeName="My" storeLocation="LocalMachine" fileName="Company.Shared.Security.IdentityServer.idsrv3test.pfx" password="idsrv3test" storageFlags="UserKeySet|MachineKeySet" />
				<cors isUseInMemoryStore="true" allowAllCustom="false" allowedOriginsCustom="http://www.foo.com,http://bar.com" />
				<csp connectSource="/connect/source" enabled="true" fontSource="/font/source" imageSource="/image/source" scriptSource="/script/source" styleSource="/style/source" />
				<endPoints enableAuthorizeEndpoint="true" enableTokenEndpoint="true" enableUserInfoEndpoint="true" enableDiscoveryEndpoint="true" enableAccessTokenValidationEndpoint="true" enableIdentityTokenValidationEndpoint="true" enableEndSessionEndpoint="true" enableClientPermissionsEndpoint="true" enableCspReportEndpoint="true" enableCheckSessionEndpoint="true" enableTokenRevocationEndpoint="true" enableIntrospectionEndpoint="true" />
				<events raiseErrorEvents="false" raiseFailureEvents="false" raiseInformationEvents="false" raiseSuccessEvents="false" />
				<inputLengthRestrictions acrValues="300" clientId="100" cspReport="2000" grantType="100" identityProvider="100" loginHint="100" nonce="300" password="100" redirectUri="400" scope="300" uiLocale="100" userName="100" />
				<logging enableHttpLogging="false" enableKatanaLogging="false" enableWebApiDiagnostics="false" webApiDiagnosticsIsVerbose="false" />
				<operationalData isUseInMemoryStore="false" isCleanUp="false" tokenExpiry="60" connectionKey="Company.Shared.Security.ConnectionString" />
				<tenants>
					<tenant id="SomeApplication" description="Some Application" connectionKey="Company.Shared.Security.ConnectionString.SomeApplication" />
					<tenant id="SomeOtherApplication" description="Some Other Application" connectionKey="Company.Shared.Security.ConnectionString.SomeOtherApplication" />
				</tenants>
			</options>
		</server>
	</identityServer>
</security>